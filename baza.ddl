-- Generated by Oracle SQL Developer Data Modeler 18.4.0.339.1532
--   at:        2021-08-04 17:41:26 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE katalog_poj (
    id_poj          INTEGER NOT NULL,
    marka           VARCHAR2(20) NOT NULL,
    model           VARCHAR2(20) NOT NULL,
    rok_produkcji   INTEGER NOT NULL
);

ALTER TABLE katalog_poj ADD CHECK ( rok_produkcji BETWEEN 1900 AND 2022 );

CREATE INDEX katalog_poj__idx ON
    katalog_poj (
        id_poj
    ASC );

CREATE INDEX katalog_poj__idxv1 ON
    katalog_poj (
        marka
    ASC,
        model
    ASC );

ALTER TABLE katalog_poj ADD CONSTRAINT katalog_poj_pk PRIMARY KEY ( id_poj );

CREATE TABLE klienci (
    id_kli     INTEGER NOT NULL,
    imie       VARCHAR2(20) NOT NULL,
    nazwisko   VARCHAR2(30) NOT NULL,
    miasto     VARCHAR2(20) NOT NULL,
    email      VARCHAR2(40) NOT NULL,
    telefon    INTEGER NOT NULL,
    haslo      VARCHAR2(40) NOT NULL,
    admin      INTEGER NOT NULL
);

CREATE INDEX klienci__idx ON
    klienci (
        id_kli
    ASC );

CREATE INDEX klienci__idxv1 ON
    klienci (
        imie
    ASC,
        nazwisko
    ASC );

ALTER TABLE klienci ADD CONSTRAINT klienci_pk PRIMARY KEY ( id_kli );

ALTER TABLE klienci ADD CONSTRAINT klienci__un UNIQUE ( email );

CREATE TABLE kupione_poj (
    klienci_id_kli      INTEGER NOT NULL,
    oferta_sal_id_ofe   INTEGER NOT NULL,
    data                DATE NOT NULL
);

ALTER TABLE kupione_poj ADD CONSTRAINT kupione_poj_pk PRIMARY KEY ( klienci_id_kli,
                                                                    oferta_sal_id_ofe );

CREATE TABLE oferta_sal (
    id_ofe               INTEGER NOT NULL,
    katalog_poj_id_poj   INTEGER NOT NULL,
    wersje_wyp_id_wyp    INTEGER NOT NULL,
    wersje_sil_id_sil    INTEGER NOT NULL,
    cena_w_salonie       INTEGER NOT NULL,
    klasa                VARCHAR2(20) NOT NULL,
    kupione              INTEGER NOT NULL
);

ALTER TABLE oferta_sal ADD CHECK ( cena_w_salonie BETWEEN 1 AND 1000000 );

CREATE INDEX oferta_sal__idx ON
    oferta_sal (
        id_ofe
    ASC );

ALTER TABLE oferta_sal ADD CONSTRAINT oferta_sal_pk PRIMARY KEY ( id_ofe );

CREATE TABLE wersje_sil (
    id_sil                  INTEGER NOT NULL,
    pojemnosc_silnika       NUMBER NOT NULL,
    moc_silnika             INTEGER NOT NULL,
    rodzaj_skrzyni_biegow   VARCHAR2(20) NOT NULL,
    liczba_cylindrow        INTEGER NOT NULL,
    typ_silnika             VARCHAR2(20) NOT NULL,
    rodzaj_napedu           VARCHAR2(30) NOT NULL,
    katalog_poj_id_poj      INTEGER NOT NULL
);

ALTER TABLE wersje_sil
    ADD CHECK ( pojemnosc_silnika BETWEEN 0.1 AND 10.0 );

ALTER TABLE wersje_sil ADD CHECK ( moc_silnika BETWEEN 1 AND 1500 );

ALTER TABLE wersje_sil
    ADD CHECK ( rodzaj_skrzyni_biegow IN (
        'Automatyczna',
        'Manualna'
    ) );

ALTER TABLE wersje_sil ADD CHECK ( liczba_cylindrow BETWEEN 1 AND 16 );

ALTER TABLE wersje_sil
    ADD CHECK ( typ_silnika IN (
        'Bokser',
        'Rotacyjny',
        'Rzedowy',
        'Widlasty'
    ) );

ALTER TABLE wersje_sil
    ADD CHECK ( rodzaj_napedu IN (
        'Na cztery kola',
        'Na przednie kola',
        'Na tylne kola'
    ) );
    
CREATE INDEX wersje_sil__idx ON
    wersje_sil (
        id_sil
    ASC );

ALTER TABLE wersje_sil ADD CONSTRAINT wersje_sil_pk PRIMARY KEY ( id_sil );

CREATE TABLE wersje_wyp (
    id_wyp               INTEGER NOT NULL,
    kolor_karoseri       VARCHAR2(30) NOT NULL,
    typ_nadwozia         VARCHAR2(30) NOT NULL,
    rodzaj_foteli        VARCHAR2(30) NOT NULL,
    kolor_tapicerki      VARCHAR2(30) NOT NULL,
    katalog_poj_id_poj   INTEGER NOT NULL
);

ALTER TABLE wersje_wyp
    ADD CHECK ( typ_nadwozia IN (
        'Coupe',
        'Hatchback',
        'Kabriolet',
        'Kombi',
        'Minivan',
        'Pick-up',
        'SUV',
        'Sedan'
    ) );
    
CREATE INDEX wersje_wyp__idx ON
    wersje_wyp (
        id_wyp
    ASC );

ALTER TABLE wersje_wyp ADD CONSTRAINT wersje_wyp_pk PRIMARY KEY ( id_wyp );

CREATE TABLE zamowienia (
    id_zam               INTEGER NOT NULL,
    klienci_id_kli       INTEGER NOT NULL,
    katalog_poj_id_poj   INTEGER NOT NULL,
    wersje_wyp_id_wyp    INTEGER NOT NULL,
    wersje_sil_id_sil    INTEGER NOT NULL,
    data_zamowienia      DATE NOT NULL,
    zrealizowano         INTEGER NOT NULL
);

CREATE INDEX zamowienia__idx ON
    zamowienia (
        id_zam
    ASC );

ALTER TABLE zamowienia ADD CONSTRAINT zamowienia_pk PRIMARY KEY ( id_zam,
                                                                  klienci_id_kli );

CREATE TABLE zamowienia_zr (
    id_zam_zr                   INTEGER NOT NULL,
    zamowienia_id_zam           INTEGER NOT NULL,
    zamowienia_klienci_id_kli   INTEGER NOT NULL,
    cena_zamowienia             INTEGER NOT NULL,
    data_zrealizowania          DATE NOT NULL
);

ALTER TABLE zamowienia_zr ADD CHECK ( cena_zamowienia BETWEEN 1 AND 1000000 );

CREATE INDEX zamowienia_zr__idx ON
    zamowienia_zr (
        id_zam_zr
    ASC );

ALTER TABLE zamowienia_zr
    ADD CONSTRAINT zamowienia_zr_pk PRIMARY KEY ( id_zam_zr,
                                                  zamowienia_id_zam,
                                                  zamowienia_klienci_id_kli );

ALTER TABLE kupione_poj
    ADD CONSTRAINT kupione_poj_klienci_fk FOREIGN KEY ( klienci_id_kli )
        REFERENCES klienci ( id_kli );

ALTER TABLE kupione_poj
    ADD CONSTRAINT kupione_poj_oferta_sal_fk FOREIGN KEY ( oferta_sal_id_ofe )
        REFERENCES oferta_sal ( id_ofe );

ALTER TABLE oferta_sal
    ADD CONSTRAINT oferta_sal_katalog_poj_fk FOREIGN KEY ( katalog_poj_id_poj )
        REFERENCES katalog_poj ( id_poj );

ALTER TABLE oferta_sal
    ADD CONSTRAINT oferta_sal_wersje_sil_fk FOREIGN KEY ( wersje_sil_id_sil )
        REFERENCES wersje_sil ( id_sil );

ALTER TABLE oferta_sal
    ADD CONSTRAINT oferta_sal_wersje_wyp_fk FOREIGN KEY ( wersje_wyp_id_wyp )
        REFERENCES wersje_wyp ( id_wyp );

ALTER TABLE wersje_sil
    ADD CONSTRAINT wersje_sil_katalog_poj_fk FOREIGN KEY ( katalog_poj_id_poj )
        REFERENCES katalog_poj ( id_poj );

ALTER TABLE wersje_wyp
    ADD CONSTRAINT wersje_wyp_katalog_poj_fk FOREIGN KEY ( katalog_poj_id_poj )
        REFERENCES katalog_poj ( id_poj );

ALTER TABLE zamowienia
    ADD CONSTRAINT zamowienia_katalog_poj_fk FOREIGN KEY ( katalog_poj_id_poj )
        REFERENCES katalog_poj ( id_poj );

ALTER TABLE zamowienia
    ADD CONSTRAINT zamowienia_klienci_fk FOREIGN KEY ( klienci_id_kli )
        REFERENCES klienci ( id_kli );

ALTER TABLE zamowienia
    ADD CONSTRAINT zamowienia_wersje_sil_fk FOREIGN KEY ( wersje_sil_id_sil )
        REFERENCES wersje_sil ( id_sil );

ALTER TABLE zamowienia
    ADD CONSTRAINT zamowienia_wersje_wyp_fk FOREIGN KEY ( wersje_wyp_id_wyp )
        REFERENCES wersje_wyp ( id_wyp );

ALTER TABLE zamowienia_zr
    ADD CONSTRAINT zamowienia_zr_zamowienia_fk FOREIGN KEY ( zamowienia_id_zam,
                                                             zamowienia_klienci_id_kli )
        REFERENCES zamowienia ( id_zam,
                                klienci_id_kli );




CREATE SEQUENCE katalog_poj_id_poj_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER katalog_poj_id_poj_trg BEFORE
    INSERT ON katalog_poj
    FOR EACH ROW
    WHEN ( new.id_poj IS NULL )
BEGIN
    :new.id_poj := katalog_poj_id_poj_seq.nextval;
END;
/

CREATE SEQUENCE klienci_id_kli_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER klienci_id_kli_trg BEFORE
    INSERT ON klienci
    FOR EACH ROW
    WHEN ( new.id_kli IS NULL )
BEGIN
    :new.id_kli := klienci_id_kli_seq.nextval;
END;
/

CREATE SEQUENCE kupione_poj_klienci_id_kli_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER kupione_poj_klienci_id_kli_trg BEFORE
    INSERT ON kupione_poj
    FOR EACH ROW
    WHEN ( new.klienci_id_kli IS NULL )
BEGIN
    :new.klienci_id_kli := kupione_poj_klienci_id_kli_seq.nextval;
END;
/

CREATE SEQUENCE oferta_sal_id_ofe_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER oferta_sal_id_ofe_trg BEFORE
    INSERT ON oferta_sal
    FOR EACH ROW
    WHEN ( new.id_ofe IS NULL )
BEGIN
    :new.id_ofe := oferta_sal_id_ofe_seq.nextval;
END;
/

CREATE SEQUENCE wersje_sil_id_sil_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER wersje_sil_id_sil_trg BEFORE
    INSERT ON wersje_sil
    FOR EACH ROW
    WHEN ( new.id_sil IS NULL )
BEGIN
    :new.id_sil := wersje_sil_id_sil_seq.nextval;
END;
/

CREATE SEQUENCE wersje_wyp_id_wyp_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER wersje_wyp_id_wyp_trg BEFORE
    INSERT ON wersje_wyp
    FOR EACH ROW
    WHEN ( new.id_wyp IS NULL )
BEGIN
    :new.id_wyp := wersje_wyp_id_wyp_seq.nextval;
END;
/

CREATE SEQUENCE zamowienia_id_zam_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER zamowienia_id_zam_trg BEFORE
    INSERT ON zamowienia
    FOR EACH ROW
    WHEN ( new.id_zam IS NULL )
BEGIN
    :new.id_zam := zamowienia_id_zam_seq.nextval;
END;
/

CREATE SEQUENCE zamowienia_zr_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER zamowienia_zr_trg BEFORE
    INSERT ON zamowienia_zr
    FOR EACH ROW
    WHEN ( new.id_zam_zr IS NULL )
BEGIN
    :new.id_zam_zr := zamowienia_zr_seq.nextval;
END;
/

CREATE SEQUENCE klienci_seq;

CREATE OR REPLACE PACKAGE klienci_security AS

  FUNCTION get_hash (p_username  IN  VARCHAR2,
                     p_password  IN  VARCHAR2)
    RETURN VARCHAR2;
    
  PROCEDURE add_user (p_username  IN  VARCHAR2,
                      p_password  IN  VARCHAR2,
                      p_imie IN VARCHAR2,
                      p_nazwisko IN VARCHAR2,
                      p_miasto IN VARCHAR2,
                      p_telefon IN INTEGER);

  PROCEDURE change_password (p_username      IN  VARCHAR2,
                             p_old_password  IN  VARCHAR2,
                             p_new_password  IN  VARCHAR2);

  PROCEDURE valid_user (p_username  IN  VARCHAR2,
                        p_password  IN  VARCHAR2);

  FUNCTION valid_user (p_username  IN  VARCHAR2,
                       p_password  IN  VARCHAR2)
    RETURN BOOLEAN;

END;
/


CREATE OR REPLACE PACKAGE BODY klienci_security AS

  FUNCTION get_hash (p_username  IN  VARCHAR2,
                     p_password  IN  VARCHAR2)
    RETURN VARCHAR2 AS
    l_salt VARCHAR2(30) := 'f1nd1ngn3m0';
  BEGIN
    RETURN DBMS_CRYPTO.HASH(UTL_RAW.CAST_TO_RAW(UPPER(p_username) || l_salt || UPPER(p_password)),DBMS_CRYPTO.HASH_SH1);
  END;

  PROCEDURE add_user (p_username  IN  VARCHAR2,
                      p_password  IN  VARCHAR2,
                      p_imie IN VARCHAR2,
                      p_nazwisko IN VARCHAR2,
                      p_miasto IN VARCHAR2,
                      p_telefon IN INTEGER) AS
  BEGIN
    INSERT INTO klienci (
      --id_kli,
      imie,
      nazwisko,
      miasto,
      email,
      telefon,
      haslo,
      admin
    )
    VALUES (
      --klienci_seq.NEXTVAL,
      p_imie,
      p_nazwisko,
      p_miasto,
      UPPER(p_username),
      p_telefon,
      get_hash(p_username, p_password),
      0
    );
    
    COMMIT;
  END;
   
  PROCEDURE change_password (p_username      IN  VARCHAR2,
                             p_old_password  IN  VARCHAR2,
                             p_new_password  IN  VARCHAR2) AS
    v_rowid  ROWID;
  BEGIN
    SELECT rowid
    INTO   v_rowid
    FROM   klienci
    WHERE  email = UPPER(p_username)
    AND    haslo = get_hash(p_username, p_old_password)
    FOR UPDATE;
    
    UPDATE klienci
    SET    haslo = get_hash(p_username, p_new_password)
    WHERE  rowid    = v_rowid;
    
    COMMIT;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RAISE_APPLICATION_ERROR(-20000, 'Invalid username/password.');
  END;

  PROCEDURE valid_user (p_username  IN  VARCHAR2,
                        p_password  IN  VARCHAR2) AS
    v_dummy  VARCHAR2(1);
  BEGIN
    SELECT '1'
    INTO   v_dummy
    FROM   klienci
    WHERE  email = UPPER(p_username)
    AND    haslo = get_hash(p_username, p_password);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RAISE_APPLICATION_ERROR(-20000, 'Invalid username/password.');
  END;
  
  FUNCTION valid_user (p_username  IN  VARCHAR2,
                       p_password  IN  VARCHAR2) 
    RETURN BOOLEAN AS
  BEGIN
    valid_user(p_username, p_password);
    RETURN TRUE;
  EXCEPTION
    WHEN OTHERS THEN
      RETURN FALSE;
  END;
  
END;

CREATE OR REPLACE TRIGGER klasaPojazdu
BEFORE INSERT
ON OFERTA_SAL
FOR EACH ROW
declare 
moc integer; 
rok integer;
BEGIN
   with s as
            (select :new.wersje_sil_id_sil sil from dual)
            
            select wersje_sil.moc_silnika
            into moc
            from s 
            join wersje_sil on sil=wersje_sil.id_sil;
     
     with s as
            (select :new.katalog_poj_id_poj poj from dual)       
            select katalog_poj.rok_produkcji
            into rok
            from s
            join katalog_poj on poj = katalog_poj.id_poj;
            
   if rok < 1990 then
   :new.Klasa := 'Samochod klasyczny';
   else if moc > 1000 then
   :new.klasa := 'Hipersamochod';
   else if moc > 500 then
   :new.klasa := 'Supersamochod';
   else IF moc > 200 then
   :new.Klasa := 'Samochod sportowy';
   else 
   :new.Klasa := 'Zwykly samochod';
   
    END IF;
    END IF;
    END IF;
    END IF;
    

END;

CREATE PROCEDURE zakup (p_klienci_id_kli in INTEGER,
                p_oferta_sal_id_ofe in Integer,
                p_data in Date) AS
BEGIN
INSERT INTO kupione_poj(
klienci_id_kli,
oferta_sal_id_ofe,
data
)
VALUES(
p_klienci_id_kli,
p_oferta_sal_id_ofe,
p_data
);

COMMIT;
END;

CREATE PROCEDURE usuniecie_ofe (p_id_ofe IN INTEGER) AS
BEGIN
UPDATE oferta_sal
SET
kupione = 1
WHERE
id_ofe = p_id_ofe;
COMMIT;
END;


CREATE PROCEDURE zamowienie (p_klienci_id_kli IN INTEGER,
                            p_katalog_poj_id_poj IN INTEGER,  
                            p_wersje_wyp_id_wyp IN INTEGER,
                            p_wersje_sil_id_sil IN INTEGER,
                            p_data_zamowienia IN DATE) AS
BEGIN
INSERT INTO zamowienia(
klienci_id_kli,
katalog_poj_id_poj,
wersje_wyp_id_wyp,
wersje_sil_id_sil,
data_zamowienia
)
VALUES(
p_klienci_id_kli,
p_katalog_poj_id_poj,
p_wersje_wyp_id_wyp,
p_wersje_sil_id_sil,
p_data_zamowienia);
COMMIT;
END;

CREATE OR REPLACE PROCEDURE dodaj_pojazd (
                               p_id_poj IN INTEGER, 
                               p_id_wyp IN INTEGER,
                               p_id_sil IN INTEGER,
                               p_cena IN INTEGER) AS
BEGIN
INSERT INTO oferta_sal(
katalog_poj_id_poj,
wersje_wyp_id_wyp,
wersje_sil_id_sil,
cena_w_salonie,
kupione
)
VALUES(
p_id_poj,
p_id_wyp,
p_id_sil,
p_cena,
0);
COMMIT;
END;


CREATE OR REPLACE PROCEDURE usun_pojazd (p_id_ofe IN INTEGER) AS
BEGIN
DELETE FROM oferta_sal
WHERE id_ofe = p_id_ofe;
COMMIT;
END;


CREATE OR REPLACE PROCEDURE zrealizuj (p_id_zam IN INTEGER,
                                        p_id_kli IN INTEGER,
                                        p_cena IN INTEGER,
                                        p_data IN DATE) AS
BEGIN
INSERT INTO zamowienia_zr(
zamowienia_id_zam,
zamowienia_klienci_id_kli,
cena_zamowienia,
data_zrealizowania
)
VALUES(
p_id_zam,
p_id_kli,
p_cena,
p_data);
COMMIT;
END;

CREATE OR REPLACE PROCEDURE zam_zr(p_id_zam IN INTEGER) AS
BEGIN
UPDATE zamowienia
SET
zrealizowano = 1
WHERE
id_zam = p_id_zam;
COMMIT;
END;



SET DEFINE OFF;
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('1','Audi','A4','2015');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('2','Subaru','Impreza','1997');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('3','Alfa Romeo','Brera','2010');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('4','Nissan','370Z','2012');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('5','Audi','R8','2019');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('6','Audi','TT','2016');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('7','Audi','A6','2020');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('8','Audi','A7','2020');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('9','BMW','Seria 3','2018');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('10','BMW','Seria 4','2014');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('11','BMW','Seria 8','2019');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('12','Dodge','Chellenger Hellcat','2020');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('13','Dodge ','Chellenger R/T','1970');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('14','Ferrari','F430','2005');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('15','Ferrari','F40','1987');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('16','Lamborghini','Murcielago','2001');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('17','Nissan','Skyline GT-R','1999');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('18','Mazda','Rx-7','1992');
Insert into KATALOG_POJ (ID_POJ,MARKA,MODEL,ROK_PRODUKCJI) values ('19','Toyota','Supra','2001');
REM INSERTING into KLIENCI
SET DEFINE OFF;
Insert into KLIENCI (ID_KLI,IMIE,NAZWISKO,MIASTO,EMAIL,TELEFON,HASLO,ADMIN) values ('17','Jan','Kowalski','Warszawa','JAN.KOWALSKI@GMAIL.COM','111222333','0E1B5386F541AE463F154347E3C7C51A2C2439C9','0');
Insert into KLIENCI (ID_KLI,IMIE,NAZWISKO,MIASTO,EMAIL,TELEFON,HASLO,ADMIN) values ('9','Tim','Smith','London','TIM@GMAIL.COM','623936826','064558515D18EAC170BFA7BAC2FFA51E3468E30E','0');
Insert into KLIENCI (ID_KLI,IMIE,NAZWISKO,MIASTO,EMAIL,TELEFON,HASLO,ADMIN) values ('7','Adam','Admin','Plock','ADAM@WP.PL','111222333','E0CF8289FFDE4ACB362B930C100DEBE4D66FBF5B','1');
Insert into KLIENCI (ID_KLI,IMIE,NAZWISKO,MIASTO,EMAIL,TELEFON,HASLO,ADMIN) values ('8','Abc','Xyz','Aaa','ABC@XYZ.PL','123456789','3C519F00D2ECFB5AB4F324398B539EA214A6EE5B','0');
Insert into KLIENCI (ID_KLI,IMIE,NAZWISKO,MIASTO,EMAIL,TELEFON,HASLO,ADMIN) values ('12','adasd','adsf','sasa','AAA@XXX.PL','133523','53CF67AD2510308F610922AAD5C8ACD3DE232E4D','0');
REM INSERTING into KUPIONE_POJ
SET DEFINE OFF;
Insert into KUPIONE_POJ (KLIENCI_ID_KLI,OFERTA_SAL_ID_OFE,DATA) values ('8','12',to_date('21/08/03','RR/MM/DD'));
Insert into KUPIONE_POJ (KLIENCI_ID_KLI,OFERTA_SAL_ID_OFE,DATA) values ('12','9',to_date('21/08/02','RR/MM/DD'));
Insert into KUPIONE_POJ (KLIENCI_ID_KLI,OFERTA_SAL_ID_OFE,DATA) values ('8','18',to_date('21/08/03','RR/MM/DD'));
Insert into KUPIONE_POJ (KLIENCI_ID_KLI,OFERTA_SAL_ID_OFE,DATA) values ('8','5',to_date('21/07/29','RR/MM/DD'));
Insert into KUPIONE_POJ (KLIENCI_ID_KLI,OFERTA_SAL_ID_OFE,DATA) values ('7','4',to_date('21/07/29','RR/MM/DD'));
Insert into KUPIONE_POJ (KLIENCI_ID_KLI,OFERTA_SAL_ID_OFE,DATA) values ('7','25',to_date('21/08/03','RR/MM/DD'));
Insert into KUPIONE_POJ (KLIENCI_ID_KLI,OFERTA_SAL_ID_OFE,DATA) values ('8','10',to_date('21/07/30','RR/MM/DD'));
Insert into KUPIONE_POJ (KLIENCI_ID_KLI,OFERTA_SAL_ID_OFE,DATA) values ('8','13',to_date('21/08/02','RR/MM/DD'));
Insert into KUPIONE_POJ (KLIENCI_ID_KLI,OFERTA_SAL_ID_OFE,DATA) values ('7','17',to_date('21/08/03','RR/MM/DD'));
Insert into KUPIONE_POJ (KLIENCI_ID_KLI,OFERTA_SAL_ID_OFE,DATA) values ('17','21',to_date('21/08/03','RR/MM/DD'));
REM INSERTING into OFERTA_SAL
SET DEFINE OFF;
Insert into OFERTA_SAL (ID_OFE,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,CENA_W_SALONIE,KLASA,KUPIONE) values ('19','6','11','9','45000','Samochod sportowy','0');
Insert into OFERTA_SAL (ID_OFE,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,CENA_W_SALONIE,KLASA,KUPIONE) values ('4','1','2','2','50000','Zwykly samochod','1');
Insert into OFERTA_SAL (ID_OFE,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,CENA_W_SALONIE,KLASA,KUPIONE) values ('5','1','2','1','25000','Samochod sportowy','1');
Insert into OFERTA_SAL (ID_OFE,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,CENA_W_SALONIE,KLASA,KUPIONE) values ('25','8','17','14','27000','Samochod sportowy','1');
Insert into OFERTA_SAL (ID_OFE,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,CENA_W_SALONIE,KLASA,KUPIONE) values ('13','3','5','5','34000','Samochod sportowy','1');
Insert into OFERTA_SAL (ID_OFE,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,CENA_W_SALONIE,KLASA,KUPIONE) values ('18','4','6','6','35000','Samochod sportowy','1');
Insert into OFERTA_SAL (ID_OFE,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,CENA_W_SALONIE,KLASA,KUPIONE) values ('20','6','13','10','43000','Samochod sportowy','0');
Insert into OFERTA_SAL (ID_OFE,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,CENA_W_SALONIE,KLASA,KUPIONE) values ('9','3','5','4','26000','Zwykly samochod','1');
Insert into OFERTA_SAL (ID_OFE,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,CENA_W_SALONIE,KLASA,KUPIONE) values ('17','4','7','6','44000','Samochod sportowy','1');
Insert into OFERTA_SAL (ID_OFE,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,CENA_W_SALONIE,KLASA,KUPIONE) values ('23','9','21','16','54000','Samochod sportowy','0');
Insert into OFERTA_SAL (ID_OFE,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,CENA_W_SALONIE,KLASA,KUPIONE) values ('10','3','4','5','31000','Samochod sportowy','1');
Insert into OFERTA_SAL (ID_OFE,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,CENA_W_SALONIE,KLASA,KUPIONE) values ('15','11','25','21','100000','Supersamochod','0');
Insert into OFERTA_SAL (ID_OFE,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,CENA_W_SALONIE,KLASA,KUPIONE) values ('12','3','4','4','23000','Zwykly samochod','1');
Insert into OFERTA_SAL (ID_OFE,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,CENA_W_SALONIE,KLASA,KUPIONE) values ('14','13','28','24','61000','Samochod klasyczny','0');
Insert into OFERTA_SAL (ID_OFE,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,CENA_W_SALONIE,KLASA,KUPIONE) values ('21','9','19','17','73000','Samochod sportowy','1');
Insert into OFERTA_SAL (ID_OFE,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,CENA_W_SALONIE,KLASA,KUPIONE) values ('22','9','20','15','45000','Zwykly samochod','0');
REM INSERTING into WERSJE_SIL
SET DEFINE OFF;
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('1','2','252','Automatyczna','4','Rzedowy','Na cztery kola','1');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('2','1,4','150','Manualna','4','Rzedowy','Na przednie kola','1');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('3','2','219','Manualna','4','Bokser','Na cztery kola','2');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('6','3,7','344','Manualna','6','Widlasty','Na tylne kola','4');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('7','5,2','620','Automatyczna','10','Widlasty','Na cztery kola','5');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('8','2','310','Manualna','4','Rzedowy','Na cztery kola','6');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('9','2,5','400','Automatyczna','5','Rzedowy','Na cztery kola','6');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('10','2','230','Manualna','4','Rzedowy','Na cztery kola','6');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('11','3','349','Automatyczna','6','Widlasty','Na cztery kola','7');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('12','4','441','Automatyczna','8','Widlasty','Na cztery kola','7');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('13','4','600','Automatyczna','8','Widlasty','Na cztery kola','8');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('14','3','340','Automatyczna','6','Widlasty','Na cztery kola','8');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('4','2,2','185','Manualna','4','Rzedowy','Na przednie kola','3');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('5','3,2','260','Manualna','6','Widlasty','Na cztery kola','3');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('15','1,6','136','Manualna','4','Rzedowy','Na tylne kola','9');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('16','2','245','Automatyczna','4','Rzedowy','Na cztery kola','9');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('17','3','431','Automatyczna','6','Rzedowy','Na tylne kola','9');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('18','3','431','Automatyczna','6','Rzedowy','Na tylne kola','10');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('19','3','306','Manualna','6','Rzedowy','Na cztery kola','10');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('20','2','184','Manualna','4','Rzedowy','Na cztery kola','10');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('21','4,4','600','Automatyczna','8','Widlasty','Na cztery kola','11');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('22','3','333','Automatyczna','6','Rzedowy','Na cztery kola','11');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('23','6,2','707','Manualna','8','Widlasty','Na tylne kola','12');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('24','7,2','375','Manualna','8','Widlasty','Na tylne kola','13');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('25','4,3','510','Automatyczna','8','Widlasty','Na tylne kola','14');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('26','2,9','478','Manualna','8','Widlasty','Na tylne kola','15');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('27','6,2','580','Manualna','12','Widlasty','Na cztery kola','16');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('28','2,6','332','Manualna','6','Rzedowy','Na cztery kola','17');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('29','1,3','252','Manualna','2','Rotacyjny','Na tylne kola','18');
Insert into WERSJE_SIL (ID_SIL,POJEMNOSC_SILNIKA,MOC_SILNIKA,RODZAJ_SKRZYNI_BIEGOW,LICZBA_CYLINDROW,TYP_SILNIKA,RODZAJ_NAPEDU,KATALOG_POJ_ID_POJ) values ('30','3','320','Manualna','6','Rzedowy','Na tylne kola','19');
REM INSERTING into WERSJE_WYP
SET DEFINE OFF;
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('1','Szary','Kombi','Skorzane','Czarny','1');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('2','Czerwony','Sedan','Skorzane','Brazowy','1');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('6','Bialy','Coupe','Sportowe','Czarny','4');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('7','Czerwony','Coupe','Sportowe','Czarny','4');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('8','Niebieski','Kabriolet','Sportowe','Bialy','4');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('9','Szary','Coupe','Sportowe','Czarny','5');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('10','Zolty','Coupe','Sportowe','Czarny','5');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('11','Niebieski','Coupe','Sportowe','Czarny','6');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('12','Czerwony','Coupe','Skorzane','Szary','6');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('13','Bialy','Kabriolet','Skorzane','Brazowy','6');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('14','Szary','Kombi','Skorzane','Czerwony','7');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('15','Bialy','Sedan','Skorzane','Czarny','7');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('16','Niebieski','Kombi','Skorzane','Szary','7');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('17','Czerwony','Sedan','Skorzane','Szary','8');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('18','Czarny','Sedan','Skorzane','Czarny','8');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('3','Niebieski','Sedan','Sportowe','Czerwony','2');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('4','Czerwony','Coupe','Skorzane','Brazowy','3');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('5','Czarny','Coupe','Skorzane','Czerwony','3');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('19','Srebrny','Sedan','Skorzane','Czarny','9');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('20','Czarny','Kombi','Skorzane','Szary','9');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('21','Niebieski','Sedan','Sportowe','Czarny','9');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('22','Zolty','Coupe','Sportowe','Czarny','10');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('23','Niebieski','Coupe','Skorzane','Szary','10');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('24','Czerwony','Kabriolet','Skorzane','Brazowy','10');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('25','Szary','Coupe','Skorzane','Czarny','11');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('26','Czarny','Coupe','Skorzane','Szary','11');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('27','Czerwony','Coupe','Skorzane','Czarny','12');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('28','Zielony','Coupe','Skorzane','Szary','13');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('29','Czerwony','Coupe','Sportowe','Szary','14');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('30','Czerwony','Coupe','Sportowe','Czarny','15');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('31','Zolty','Coupe','Sportowe','Szary','16');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('32','Niebieski','Coupe','Sportowe','Szary','17');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('33','Czerwony','Coupe','Sportowe','Szary','18');
Insert into WERSJE_WYP (ID_WYP,KOLOR_KAROSERI,TYP_NADWOZIA,RODZAJ_FOTELI,KOLOR_TAPICERKI,KATALOG_POJ_ID_POJ) values ('34','Bialy','Coupe','Sportowe','Szary','19');
REM INSERTING into ZAMOWIENIA
SET DEFINE OFF;
Insert into ZAMOWIENIA (ID_ZAM,KLIENCI_ID_KLI,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,DATA_ZAMOWIENIA,ZREALIZOWANO) values ('16','12','10','23','18',to_date('21/08/03','RR/MM/DD'),'0');
Insert into ZAMOWIENIA (ID_ZAM,KLIENCI_ID_KLI,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,DATA_ZAMOWIENIA,ZREALIZOWANO) values ('18','8','4','8','6',to_date('21/08/03','RR/MM/DD'),'0');
Insert into ZAMOWIENIA (ID_ZAM,KLIENCI_ID_KLI,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,DATA_ZAMOWIENIA,ZREALIZOWANO) values ('11','8','4','5','5',to_date('21/07/30','RR/MM/DD'),'1');
Insert into ZAMOWIENIA (ID_ZAM,KLIENCI_ID_KLI,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,DATA_ZAMOWIENIA,ZREALIZOWANO) values ('14','9','2','3','3',to_date('21/08/02','RR/MM/DD'),'0');
Insert into ZAMOWIENIA (ID_ZAM,KLIENCI_ID_KLI,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,DATA_ZAMOWIENIA,ZREALIZOWANO) values ('15','8','7','14','12',to_date('21/08/03','RR/MM/DD'),'1');
Insert into ZAMOWIENIA (ID_ZAM,KLIENCI_ID_KLI,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,DATA_ZAMOWIENIA,ZREALIZOWANO) values ('9','8','1','2','1',to_date('21/07/29','RR/MM/DD'),'1');
Insert into ZAMOWIENIA (ID_ZAM,KLIENCI_ID_KLI,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,DATA_ZAMOWIENIA,ZREALIZOWANO) values ('10','8','3','5','5',to_date('21/07/29','RR/MM/DD'),'1');
Insert into ZAMOWIENIA (ID_ZAM,KLIENCI_ID_KLI,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,DATA_ZAMOWIENIA,ZREALIZOWANO) values ('12','9','9','17','13',to_date('21/07/31','RR/MM/DD'),'0');
Insert into ZAMOWIENIA (ID_ZAM,KLIENCI_ID_KLI,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,DATA_ZAMOWIENIA,ZREALIZOWANO) values ('13','12','3','5','5',to_date('21/08/02','RR/MM/DD'),'0');
Insert into ZAMOWIENIA (ID_ZAM,KLIENCI_ID_KLI,KATALOG_POJ_ID_POJ,WERSJE_WYP_ID_WYP,WERSJE_SIL_ID_SIL,DATA_ZAMOWIENIA,ZREALIZOWANO) values ('17','17','7','15','12',to_date('21/08/03','RR/MM/DD'),'1');
REM INSERTING into ZAMOWIENIA_ZR
SET DEFINE OFF;
Insert into ZAMOWIENIA_ZR (ID_ZAM_ZR,ZAMOWIENIA_ID_ZAM,ZAMOWIENIA_KLIENCI_ID_KLI,CENA_ZAMOWIENIA,DATA_ZREALIZOWANIA) values ('2','9','8','21000',to_date('21/08/03','RR/MM/DD'));
Insert into ZAMOWIENIA_ZR (ID_ZAM_ZR,ZAMOWIENIA_ID_ZAM,ZAMOWIENIA_KLIENCI_ID_KLI,CENA_ZAMOWIENIA,DATA_ZREALIZOWANIA) values ('4','10','8','10000',to_date('21/08/03','RR/MM/DD'));
Insert into ZAMOWIENIA_ZR (ID_ZAM_ZR,ZAMOWIENIA_ID_ZAM,ZAMOWIENIA_KLIENCI_ID_KLI,CENA_ZAMOWIENIA,DATA_ZREALIZOWANIA) values ('1','11','8','10000',to_date('21/07/31','RR/MM/DD'));
Insert into ZAMOWIENIA_ZR (ID_ZAM_ZR,ZAMOWIENIA_ID_ZAM,ZAMOWIENIA_KLIENCI_ID_KLI,CENA_ZAMOWIENIA,DATA_ZREALIZOWANIA) values ('5','15','8','40000',to_date('21/08/03','RR/MM/DD'));
Insert into ZAMOWIENIA_ZR (ID_ZAM_ZR,ZAMOWIENIA_ID_ZAM,ZAMOWIENIA_KLIENCI_ID_KLI,CENA_ZAMOWIENIA,DATA_ZREALIZOWANIA) values ('6','17','17','55000',to_date('21/08/03','RR/MM/DD'));


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             8
-- CREATE INDEX                             9
-- ALTER TABLE                             21
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
